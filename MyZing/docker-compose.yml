services:
    postgres:
        image: postgres:17.3
        restart: always
        container_name: myzing_postgres
        environment:
            POSTGRES_DB: MyZing
            POSTGRES_PASSWORD: 123
            POSTGRES_USER: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data
    elasticsearch:
        image: elasticsearch:8.18.2
        restart: always
        container_name: myzing_elasticsearch
        environment:
            xpack.security.enabled: false
            discovery.type: single-node
            ES_JAVA_OPTS: -Xms512m -Xmx512m
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data
    redis:
        image: redis:latest
        restart: always
        container_name: myzing_redis
        environment:
            REDIS_PASSWORD: 123
        volumes:
            - redis_data:/data
    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.2
        container_name: myzing_zookeeper
        restart: always
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        volumes:
            - zookeeper_data:/var/lib/zookeeper/data
            - zookeeper_log:/var/lib/zookeeper/log
    kafka:
        image: confluentinc/cp-kafka:7.3.2
        container_name: myzing_kafka
        restart: always
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        depends_on:
            -   zookeeper
        volumes:
            - kafka_data:/var/lib/kafka/data
    backend:
        image: nguyentienminh0710/myzing:0.0.2
        container_name: myzing_be
        env_file: ".env"
        restart: always
        environment:
            REDIS_PASSWORD: 123
            POSTGRES_HOST: postgres
            REDIS_HOST: redis
            KAFKA_BOOTSTRAP_SERVERS: kafka:29092
            ELASTICSEARCH_HOST: elasticsearch
        depends_on:
            - postgres
            - redis
            - kafka
            - zookeeper
            - elasticsearch
        ports:
            - "8081:8081"
#    frontend:
#        build:
#            context: "../myzingvite"
#            dockerfile: Dockerfile
#            args:
#                VITE_SERVER_HOST: http://localhost:8081/api/v1
#        restart: always
#        container_name: myzing_fe
#        depends_on:
#            - backend
#        ports:
#            - "5173:5173"
volumes:
    postgres_data:
    elasticsearch_data:
    redis_data:
    kafka_data:
    zookeeper_data:
    zookeeper_log: